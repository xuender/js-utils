// Generated by CoffeeScript 1.6.3
/*
# Encoding Utils
*/

if (!this.JU) {
  this.JU = {};
}

JU.toBig5 = function(str) {
  /* UTF8 -> BIG5*/

  var big5code, code, i, ret, _i, _len;
  ret = [];
  for (_i = 0, _len = str.length; _i < _len; _i++) {
    i = str[_i];
    if (i === ' ') {
      ret.push('+');
      continue;
    }
    code = i.charCodeAt(0);
    if (code >> 7) {
      big5code = JU._big5[code];
      ret.push('%');
      ret.push((big5code >> 8).toString(16).toUpperCase());
      ret.push(String.fromCharCode(big5code & 0xFF));
    } else {
      ret.push(String.fromCharCode(code));
    }
  }
  return ret.join('');
};

JU.toGbk = function(str) {
  /* UTF8 -> GBK*/

  var code, gbkcode, i, ret, _i, _len;
  ret = [];
  for (_i = 0, _len = str.length; _i < _len; _i++) {
    i = str[_i];
    if (i === ' ') {
      ret.push('+');
      continue;
    }
    code = i.charCodeAt(0);
    if (code >> 7) {
      gbkcode = JU._gbk[code];
      ret.push('%');
      ret.push((gbkcode >> 8).toString(16).toUpperCase());
      ret.push('%');
      ret.push((gbkcode & 0xFF).toString(16).toUpperCase());
    } else {
      ret.push(String.fromCharCode(code));
    }
  }
  return ret.join('');
};

JU.toEncoding = function(str, encoding) {
  if (encoding == null) {
    encoding = 'GBK';
  }
  /* UTF8 -> GBK or BIG5*/

  if (encoding === 'big5') {
    return JU.toBig5(str);
  }
  return JU.toGbk(str);
};
